---
export interface Post {
    title: string;
    slug: string;
    excerpt?: string;
    publishedAt?: string;
    mainImage?: { asset?: { url: string }; alt?: string };
    author?: { name: string };
    categories?: { title: string; slug?: string }[];
    tags?: string[];
}

export interface Props {
    post: Post;
}

const { post } = Astro.props;
---

<article
    class="border rounded-lg overflow-hidden hover:shadow-lg transition-shadow flex flex-col"
>
    {
        post.mainImage?.asset?.url && (
            <img
                src={post.mainImage.asset.url}
                alt={post.mainImage.alt ?? post.title}
                class="w-full h-48 object-cover"
            />
        )
    }

    <div class="p-4 flex-1 flex flex-col">
        {
            post.categories && post.categories.length > 0 && (
                <div class="mb-2 flex flex-wrap gap-2">
                    {post.categories.map((category) => (
                        <a
                            href={`/blog/categories/${category.slug}`}
                            class="px-2 py-1 text-sm bg-gray-200 text-gray-800 rounded hover:bg-gray-300"
                        >
                            {category.title}
                        </a>
                    ))}
                </div>
            )
        }

        <h3 class="text-lg font-semibold mb-2">{post.title}</h3>
        {
            post.tags && post.tags.length > 0 && (
                <div class="mb-2 text-sm text-gray-500">
                    {post.tags.map((tag) => (
                        <a
                            href={`/blog/tags?tag=${tag}`}
                            class="mr-2 hover:underline"
                        >
                            #{tag}
                        </a>
                    ))}
                </div>
            )
        }

        {
            post.excerpt && (
                <p class="text-sm text-gray-700 mb-4 line-clamp-3">
                    {post.excerpt}
                </p>
            )
        }

        <a
            href={`/blog/post/${post.slug}`}
            class="text-blue-500 underline self-start mt-auto"
        >
            Read more
        </a>
    </div>

    <footer
        class="bg-gray-100 px-4 py-2 flex justify-between text-sm text-gray-500"
    >
        {post.author?.name && <span>By {post.author.name}</span>}
        {
            post.publishedAt && (
                <time datetime={post.publishedAt}>
                    {new Date(post.publishedAt).toLocaleDateString()}
                </time>
            )
        }
    </footer>
</article>
