---
import { formatDate } from '@/libs/utils';
import { type Post } from '@/types';

export interface Props {
    post: Post;
}

const { post } = Astro.props;
---

<article
    class="rounded-lg transition-transform transform-gpu duration-500 shadow-400 hover:shadow-100 bg-s2 flex flex-col backdrop-blur-sm"
>
    {
        post.mainImage?.asset?.url && (
            <img
                src={post.mainImage.asset.url}
                alt={post.mainImage.alt ?? post.title}
                class="w-full h-64 object-cover rounded-t-lg"
            />
        )
    }
    {
        post.categories && post.categories.length > 0 && (
            <div class="p-4 flex flex-wrap gap-2">
                {post.categories.map((category) => (
                    <a
                        href={`/blog/categories/${category.slug}`}
                        class="px-3 py-1 text-xs text-black bg-p1 rounded-full shadow font-bold uppercase hover:bg-p1/80 transition"
                    >
                        {category.title}
                    </a>
                ))}
            </div>
        )
    }

    <div class="p-4 flex-1 flex flex-col">
        <p class="text-lg h6 font-kanit uppercase font-bold text-p3 mb-2">
            {post.title}
        </p>
        {
            post.tags && post.tags.length > 0 && (
                <div class="mb-4 text-sm text-p5">
                    {post.tags.map((tag) => (
                        <a
                            href={`/blog/tags?tag=${tag}`}
                            class="mr-2 hover:underline hover:text-p1 transition"
                        >
                            #{tag}
                        </a>
                    ))}
                </div>
            )
        }
        {
            post.excerpt && (
                <p class="text-sm text-white ">
                    {post.excerpt.slice(0, 200)}
                    <span>
                        ...{' '}
                        <a
                            href={`/blog/post/${post.slug}`}
                            class=" underline text-p4 hover:text-p1 transition font-bold"
                        >
                            read more
                        </a>
                    </span>
                </p>
            )
        }
    </div>
    <footer class="p-4 flex items-center justify-between text-sm text-p5">
        {
            post.author?.name && (
                <div class="flex items-center">
                    {post.author.image?.asset?.url && (
                        <img
                            src={post.author.image.asset.url}
                            alt={post.author.name}
                            class="w-8 h-8 rounded-full mr-2"
                        />
                    )}
                    <span>by {post.author.name}</span>
                </div>
            )
        }
        {
            post.publishedAt && (
                <time datetime={post.publishedAt} class="text-right">
                    {formatDate(post.publishedAt)}
                </time>
            )
        }
    </footer>
</article>
