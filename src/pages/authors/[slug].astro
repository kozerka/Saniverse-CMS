---
import { loadQuery } from '@/sanity/lib/load-query';
import PortableText from '@/components/PortableText.astro';
import Layout from '@/layouts/Layout.astro';

const { params } = Astro;

interface Author {
    name: string;
    profession?: string;
    image?: { asset?: { url: string }; alt?: string };
    bio?: any[];
}

const { data: author } = await loadQuery<Author>({
    query: `*[_type == "author" && slug.current == $slug][0]{
    name,
    profession,
    image{
      asset->{
        url
      },
      alt
    },
    bio
  }`,
    params: { slug: params.slug ?? '' },
});

interface Post {
    title: string;
    slug: { current: string };
    publishedAt?: string;
    categories?: { title: string }[];
    mainImage?: { asset?: { url: string }; alt?: string };
}

const { data: posts } = await loadQuery<Post[]>({
    query: `*[_type == "post" && author->slug.current == $slug]{
    title,
    "slug": slug,
    publishedAt,
    categories[]->{
      title
    },
    mainImage{
      asset->{
        url
      },
      alt
    }
  }`,
    params: { slug: params.slug ?? '' },
});
---

<Layout title={author ? author.name : 'Author'}>
    <section class="container mx-auto px-4 py-12 mt-32">
        {
            author ? (
                <>
                    <div class="flex flex-col md:flex-row items-start gap-8 mb-12">
                        <div class="flex-shrink-0">
                            {author.image?.asset?.url && (
                                <img
                                    src={author.image.asset.url}
                                    alt={author.image.alt ?? author.name}
                                    class="w-48 h-48 object-cover rounded-lg"
                                />
                            )}
                        </div>

                        <div class="flex-1 flex flex-col">
                            <h1 class="text-3xl font-bold mb-2">
                                {author.name}
                            </h1>
                            {author.profession && (
                                <p class="text-gray-500 mb-4">
                                    {author.profession}
                                </p>
                            )}

                            {author.bio && author.bio.length > 0 && (
                                <div class="prose max-w-none mb-8">
                                    <PortableText portableText={author.bio} />
                                </div>
                            )}
                        </div>
                    </div>

                    <h2 class="text-2xl font-semibold mb-4">
                        All Posts by {author.name}
                    </h2>
                    {posts && posts.length > 0 ? (
                        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
                            {posts.map((post) => (
                                <a
                                    href={`/blog/post/${post.slug.current}`}
                                    class="border rounded-lg overflow-hidden hover:shadow-lg transition-shadow flex flex-col"
                                >
                                    {post.mainImage?.asset?.url && (
                                        <img
                                            src={post.mainImage.asset.url}
                                            alt={
                                                post.mainImage.alt ?? post.title
                                            }
                                            class="w-full h-48 object-cover"
                                        />
                                    )}
                                    <div class="p-4 flex-1 flex flex-col">
                                        <h3 class="text-lg font-semibold mb-2">
                                            {post.title}
                                        </h3>
                                        {post.categories &&
                                            post.categories.length > 0 && (
                                                <p class="text-sm text-gray-500 mb-2">
                                                    Categories:{' '}
                                                    {post.categories
                                                        .map((c) => c.title)
                                                        .join(', ')}
                                                </p>
                                            )}
                                        {post.publishedAt && (
                                            <p class="text-sm text-gray-400 mb-2">
                                                {new Date(
                                                    post.publishedAt
                                                ).toLocaleDateString()}
                                            </p>
                                        )}
                                        <span class="mt-auto inline-block text-blue-500 underline">
                                            Read more
                                        </span>
                                    </div>
                                </a>
                            ))}
                        </div>
                    ) : (
                        <p>No posts found for this author.</p>
                    )}
                </>
            ) : (
                <p>Author not found.</p>
            )
        }
    </section>
</Layout>
